apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "orchestrator.fullname" . }}
  labels:
    {{- include "orchestrator.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  {{- if semverCompare ">=1.22-0" .Capabilities.KubeVersion.GitVersion }}
  minReadySeconds: 2
  {{- end}}
  {{- if semverCompare "<=1.24-0" .Capabilities.KubeVersion.GitVersion }}
  serviceName: {{ include "orchestrator.fullname" . }}
  {{- end}}
  selector:
    matchLabels:
      {{- include "orchestrator.selectorLabels" . | nindent 6 }}
  podManagementPolicy: {{ .Values.podManagementPolicy }}
  updateStrategy:
    type: {{ .Values.updateStrategy }}
  template:
    metadata:
      annotations:
      {{- with .Values.podAnnotations }}
        {{- toYaml . | nindent 8 }}
      {{- end }}
        checksum/config: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
      labels:
        {{- include "orchestrator.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- if .Values.hostNetwork }}
      hostNetwork: true
      {{- end }}
      {{- if .Values.priorityClassName }}
      priorityClassName: "{{ .Values.priorityClassName }}"
      {{- end }}
      serviceAccountName: {{ include "orchestrator.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
            - name: MAVERICS_HTTP_ADDRESS
              value: "0.0.0.0:{{ .Values.service.port }}"
            {{- if .Values.cloud.enabled }}
            - name: MAVERICS_BUNDLE_PUBLIC_KEY_FILE
              value: /etc/maverics/cloud-config/bundle_public_key.pem
            {{- if .Values.cloud.config.bundleB64 }}
            - name: MAVERICS_CONFIG
              value: /etc/maverics/cloud-config/maverics.tar.gz
            {{- end -}}
            {{ else }}
            - name: MAVERICS_CONFIG
              value: /etc/maverics/config/maverics.yml
            {{- end }}
            {{- if .Values.orchestrator.groups.create -}}
            - name: MAVERICS_GROUPS_PRIMARY_NAME
              value: {{ include "orchestrator.primaryGroupName" . }}
            - name: MAVERICS_GROUPS_PRIMARY_MEMBERSHIP_ADDR
              value: /ip4/0.0.0.0/tcp/9450
            - name: MAVERICS_GROUPS_PRIMARY_MEMBERSHIP_SRV_RECORD
              value: "_membership-udp._udp.{{ include "orchestrator.fullname" . }}-groups.{{ .Release.Namespace }}.svc.{{ .Values.clusterDomain }}."
            - name: MAVERICS_GROUPS_PRIMARY_DATA_ADDR
              value: /ip4/0.0.0.0/tcp/9451
            {{ with .Values.orchestrator.groups.primary.psk }}
            {{ if or (and .createSecret .value) .secretName }}
            - name: MAVERICS_GROUPS_PRIMARY_SECURITY_PSK
              valueFrom:
                secretKeyRef:
                  name: "{{ include "orchestrator.primaryGroupPSKSecretName" $ }}"
                  key: "{{ required "A valid key name for the PSK is required!" .secretKey }}"
            {{ end }}
            {{ end }}
            - name: MAVERICS_GROUPS_PRIMARY_NODE_KEY_FILE
              value: /etc/maverics/groups/tls/primary-key
            {{- end }}
            {{- range $key, $value := .Values.env }}
            - name: "{{ tpl $key $ }}"
              value: "{{ tpl (print $value) $ }}"
            {{- end }}
            {{- range $key, $value := .Values.envValueFrom }}
            - name: {{ $key | quote }}
              valueFrom:
                {{- tpl (toYaml $value) $ | nindent 16 }}
            {{- end }}
          {{- if or .Values.envFromSecrets .Values.envFromConfigMaps}}
          envFrom:
            {{- range .Values.envFromSecrets }}
            - secretRef:
                name: {{ tpl .name $ }}
                optional: {{ .optional | default false }}
            {{- end }}
            {{- range .Values.envFromConfigMaps }}
            - configMapRef:
                name: {{ tpl .name $ }}
                optional: {{ .optional | default false }}
            {{- end }}
          {{- end }}
          ports:
            - name: http
              containerPort: {{ .Values.service.port }}
              protocol: TCP
          livenessProbe:
            {{- toYaml .Values.orchestrator.livenessProbe | nindent 12 }}
          readinessProbe:
            {{- toYaml .Values.orchestrator.readinessProbe | nindent 12 }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
            {{- if .Values.cloud.enabled }}
            - name: cloud-config
              mountPath: /etc/maverics/cloud-config/
            {{- else }}
            - name: orchestrator-config
              mountPath: /etc/maverics/config/
            {{- end }}
            - name: groups-certificates
              mountPath: /etc/maverics/groups/tls
            {{- range .Values.extraSecretMounts }}
            - name: {{ .name }}
              mountPath: {{ .mountPath }}
              readOnly: {{ .readOnly }}
              subPath: {{ .subPath | default "" }}
            {{- end }}
            {{- range .Values.extraVolumeMounts }}
            - name: {{ .name }}
              mountPath: {{ .mountPath }}
              subPath: {{ .subPath | default "" }}
              readOnly: {{ .readOnly }}
            {{- end }}
      terminationGracePeriodSeconds: {{ .Values.terminationGracePeriod }}
      volumes:
        - name: orchestrator-config
          configMap:
            name: {{ template "orchestrator.fullname" . }}-config
        {{- if .Values.cloud.enabled }}
        - name: cloud-config
          configMap:
            name: {{ template "orchestrator.cloudConfigName" . }}
        {{- end }}
        - name: groups-certificates
          emptyDir: {}
        {{- range .Values.extraConfigmapMounts }}
        - name: {{ tpl .name . }}
          configMap:
            name: {{ tpl .configMap . }}
            {{- with .items }}
            items:
              {{- toYaml . | nindent 8 }}
            {{- end }}
        {{- end }}
        {{- range .Values.extraSecretMounts }}
        {{- if .secretName }}
        - name: {{ .name }}
          secret:
            secretName: {{ .secretName }}
            defaultMode: {{ .defaultMode }}
            {{- with .items }}
            items:
              {{- toYaml . | nindent 8 }}
            {{- end }}
        {{- else if .projected }}
        - name: {{ .name }}
          projected:
            {{- toYaml .projected | nindent 6 }}
        {{- else if .csi }}
        - name: {{ .name }}
          csi:
            {{- toYaml .csi | nindent 6 }}
        {{- end }}
        {{- end }}
        {{- range .Values.extraVolumeMounts }}
        - name: {{ .name }}
          {{- if .existingClaim }}
          persistentVolumeClaim:
            claimName: {{ .existingClaim }}
          {{- else if .hostPath }}
          hostPath:
            path: {{ .hostPath }}
          {{- else if .csi }}
          csi:
            {{- toYaml .data | nindent 6 }}
          {{- else }}
          emptyDir: {}
          {{- end }}
        {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
